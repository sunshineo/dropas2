server:
    applicationConnectors:
    - type: http
      port: 10082
    adminConnectors:
    - type: http
      port: 10083
    requestLog:
        appenders:

        - type: console
          threshold: ALL
          target: stdout

        - type: file
          # Do not write log statements below this threshold to the file.
          threshold: ALL

          # The file to which current statements will be logged.
          currentLogFilename: ./logs/dropas2-request.log

          # When the log file rotates, the archived log will be renamed to this and gzipped. The
          # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
          # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
          archivedLogFilenamePattern: ./logs/dropas2-request-%d.log.gz

          # The number of archived files to keep.
          archivedFileCount: 50

          # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
          timeZone: UTC

logging:
    appenders:

    - type: console
      threshold: ALL
      target: stdout
      logFormat: "%-5level %date{dd MMM yyyy;HH:mm:ss.SSS} [%t] %logger: %message%n"

    - type: file
      # Do not write log statements below this threshold to the file.
      threshold: ALL

      # The file to which current statements will be logged.
      currentLogFilename: ./logs/dropas2-service.log

      # When the log file rotates, the archived log will be renamed to this and gzipped. The
      # %d is replaced with the previous day (yyyy-MM-dd). Custom rolling windows can be created
      # by passing a SimpleDateFormat-compatible format as an argument: "%d{yyyy-MM-dd-hh}".
      archivedLogFilenamePattern: ./logs/dropas2-service-%d.log.gz

      # The number of archived files to keep.
      archivedFileCount: 50

      # The timezone used to format dates. HINT: USE THE DEFAULT, UTC.
      timeZone: UTC

      logFormat: "%-5level %date{dd MMM yyyy;HH:mm:ss.SSS} [%t] %logger: %message%n"

database:
    # the name of your JDBC driver
    driverClass: com.mysql.jdbc.Driver

    # the username
    user: vxp

    # the password
    password: vxpvxp

    # the JDBC URL
    url: jdbc:mysql://localhost:3306/dropas2

    # any properties specific to your JDBC driver:
    properties:
      charSet: UTF-8
      hibernate.session.events.log: false

    # the maximum amount of time to wait on an empty pool before throwing an exception
    maxWaitForConnection: 1s

    # the SQL query to run when validating a connection's liveness
    validationQuery: "/* MyService Health Check */ SELECT 1"

    # the timeout before a connection validation queries fail
    validationQueryTimeout: 3s

    # the minimum number of connections to keep open
    minSize: 8

    # the maximum number of connections to keep open
    maxSize: 32

    # whether or not idle connections should be validated
    checkConnectionWhileIdle: false

    # the amount of time to sleep between runs of the idle connection validation, abandoned cleaner and idle pool resizing
    evictionInterval: 10s

    # the minimum amount of time an connection must sit idle in the pool before it is eligible for eviction
    minIdleTime: 1 minute

    # http://stackoverflow.com/questions/29474198/broken-pipe-exception-in-dropwizard-application
    checkConnectionWhileIdle: true
    checkConnectionOnReturn: true
    checkConnectionOnBorrow: true